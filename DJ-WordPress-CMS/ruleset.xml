<?xml version="1.0"?>
<ruleset name="DJ-WordPress-CMS">
    <description>PHP_CodeSniffer standard for Dow Jones WordPress Coding Standards.</description>

    <config name="encoding" value="utf-8" />

    <arg name="tab-width" value="4" />
    <arg name="report-width" value="192" />
    <arg name="report" value="full" />
    <arg name="extensions" value="php" />
    <arg value="q" />

    <ini name="memory_limit" value="1024M" />

    <!--
    Pass some flags to PHPCS:
     p flag: Show progress of the run.
     s flag: Show sniff codes in all reports.
     n flag: Do not print warnings.
    -->
    <arg value="ps"/>

    <!--
    Only check the PHP files.
    Check all files in this directory and the directories below it.
    Exclude a few directories and autogenerated files.
    -->
    <arg name="extensions" value="php"/>
    <file>.</file>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>inc/cli.php</exclude-pattern>
    <exclude-pattern>tests/</exclude-pattern>

    <!-- Must include before WordPress rules to ovverride the default rules. -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="WordPress"/>

    <!-- The version set here matches the minimum version tested in .travis.yml.  -->
    <config name="minimum_supported_wp_version" value="4.9"/>

    <rule ref="Generic.Files.OneObjectStructurePerFile">
        <!--
        Increase severity. If it becomes a problem for this sniff to trigger an
        error, then we might want to provide feedback to the WPCS maintainers.
        See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/1111.
        -->
        <type>error</type>
    </rule>

    <rule ref="WordPress.WP.I18n">
        <properties>
            <!--
            Verify that the text_domain is set to the desired text-domain.
            Multiple valid text domains can be provided as a comma-delimited list.
             -->
            <property name="text_domain" type="array" value="dow-jones"/>
        </properties>
    </rule>

    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <!--
            WordPress.com VIP does not propagate wp_cache_set data across datacenters,
            largely to avoid attempting to propagate large (>50k) data for batcache.
            -->
            <property name="forbiddenFunctions" type="array" value="wp_cache_add=>wp_cache_set"/>
            <!-- This is the newer format, only supported in PHPCS 3.3.0+
            <property name="forbiddenFunctions" type="array">
                <element key="wp_cache_add" value="wp_cache_set"/>
            </property> -->
        </properties>
    </rule>

    <rule ref="WordPress-Extra">
        <exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact"/>
        <exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
        <exclude name="WordPress.Arrays.ArrayDeclarationSpacing.AssociativeKeyFound"/>
        <exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
    </rule>

    <rule ref="WordPress-Core">
        <exclude name="WordPress.Files.FileName" />
    </rule>

    <rule ref="WordPress-VIP-Go" />
</ruleset>
